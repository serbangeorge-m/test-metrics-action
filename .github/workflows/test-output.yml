name: Test Action Output

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-output:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        output_type: [markdown, html]
        include:
          - output_type: markdown
            html_output: false
            job_name: "Markdown Summary"
          - output_type: html
            html_output: true
            job_name: "HTML Dashboard"
    
    name: Test Output - ${{ matrix.job_name }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install
        working-directory: ./test-output

      - name: Run tests
        run: npm test
        working-directory: ./test-output

      - name: Run test-metrics-action (${{ matrix.job_name }})
        id: test-metrics
        uses: ./
        if: always()
        with:
          report_paths: 'test-output/jest-results.json'
          test_framework: 'jest'
          html_output: ${{ matrix.html_output }}
          detailed_summary: true
          fail_on_failure: false  # Don't fail for demo purposes
          cache_key_prefix: 'test-output-${{ matrix.output_type }}'
          artifact_suffix: '${{ matrix.output_type }}'

      - name: Verify outputs
        run: |
          echo "ðŸ§ª Test Results for ${{ matrix.job_name }}:"
          echo "Total tests: ${{ steps.test-metrics.outputs.total_tests }}"
          echo "Passed tests: ${{ steps.test-metrics.outputs.passed_tests }}"
          echo "Failed tests: ${{ steps.test-metrics.outputs.failed_tests }}"
          echo "Pass rate: ${{ steps.test-metrics.outputs.pass_rate }}%"
          echo "Duration: ${{ steps.test-metrics.outputs.total_duration }}s"
          
          if [ "${{ steps.test-metrics.outputs.total_tests }}" != "1" ]; then
            echo "::error::Total tests output is not correct!"
            exit 1
          fi
          if [ "${{ steps.test-metrics.outputs.passed_tests }}" != "1" ]; then
            echo "::error::Passed tests output is not correct!"
            exit 1
          fi
          if [ "${{ steps.test-metrics.outputs.failed_tests }}" != "0" ]; then
            echo "::error::Failed tests output is not correct!"
            exit 1
          fi
