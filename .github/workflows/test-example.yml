name: Test Metrics Example

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      output_format:
        description: 'Output format for test metrics'
        required: true
        default: 'html'
        type: choice
        options:
        - html
        - markdown

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "HTML Dashboard"
            html_output: true
            icon: "üé®"
          - name: "Markdown Report"
            html_output: false
            icon: "üìù"
    
    name: ${{ matrix.icon }} Playwright Tests - ${{ matrix.name }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright Tests
      run: npx playwright test --reporter=json
      if: always()
      env:
        PLAYWRIGHT_JSON_OUTPUT_NAME: playwright-results.json

    - name: List generated files
      run: |
        echo "üìÅ Generated test files:"
        ls -la *.json || echo "No JSON files found"
        echo ""
      if: always()
    
    - name: ${{ matrix.icon }} Publish Test Metrics (${{ matrix.name }})
      uses: ./  # Use local action
      if: always()
      with:
        report_paths: 'playwright-results.json'
        test_framework: 'playwright'
        html_output: ${{ matrix.html_output }}
        detailed_summary: true
        fail_on_failure: false  # Allow failures for demo
        require_tests: true
        retention_days: 30
        cache_key_prefix: 'playwright-${{ matrix.name }}'
        
    # Add a job to demonstrate JUnit XML support with HTML output
  junit-demo:
    runs-on: ubuntu-latest
    name: üß™ JUnit XML - HTML Dashboard
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Use sample JUnit XML
      run: |
        echo "üìÑ Using sample JUnit XML file for demonstration"
        ls -la examples/
        cat examples/junit-sample.xml
    
    - name: üé® Publish JUnit Test Metrics (HTML Dashboard)
      uses: ./
      if: always()
      with:
        report_paths: 'examples/junit-sample.xml'
        test_framework: 'junit'
        html_output: true
        detailed_summary: true
        fail_on_failure: false
        require_tests: true
