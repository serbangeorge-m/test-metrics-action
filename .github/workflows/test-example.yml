name: Test Metrics Example

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      output_format:
        description: 'Output format for test metrics'
        required: true
        default: 'html'
        type: choice
        options:
        - html
        - markdown

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "HTML Dashboard"
            html_output: true
            icon: "🎨"
          - name: "Markdown Report"
            html_output: false
            icon: "📝"
    
    name: ${{ matrix.icon }} Playwright Tests - ${{ matrix.name }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright Tests
      run: |
        echo "🎭 Running Playwright tests with JSON reporter..."
        npx playwright test --reporter=json > playwright-results.json 2>&1 || true
        echo "✅ Playwright tests completed (exit code ignored for demo)"
      if: always()

    - name: 🔍 Debug Test Files
      run: |
        echo "📂 Current directory:"
        pwd
        echo "📁 All files in current directory:"
        ls -la
        echo "📄 Looking for JSON files:"
        find . -name "*.json" -type f 2>/dev/null || echo "No JSON files found"
        echo "📊 Looking for Playwright results:"
        ls -la playwright-report/ 2>/dev/null || echo "No playwright-report directory"
        ls -la results.json 2>/dev/null || echo "No results.json"
        ls -la playwright-results.json 2>/dev/null || echo "No playwright-results.json"
        echo "🎯 Using report path: playwright-results.json"
      if: always()
    
    - name: ${{ matrix.icon }} Publish Test Metrics (${{ matrix.name }})
      uses: ./  # Use local action
      if: always()
      with:
        report_paths: 'playwright-results.json'
        test_framework: 'playwright'
        html_output: ${{ matrix.html_output }}
        detailed_summary: true
        fail_on_failure: false  # Allow failures for demo
        require_tests: false    # Don't require tests for demo (in case Playwright fails)
        retention_days: 30
        cache_key_prefix: 'playwright-${{ matrix.name }}'
        artifact_suffix: '${{ matrix.name }}'
        
    # Add a job to demonstrate JUnit XML support with HTML output
  junit-demo:
    runs-on: ubuntu-latest
    name: 🧪 JUnit XML - HTML Dashboard
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: 🔍 Debug JUnit XML
      run: |
        echo "📂 Current directory:"
        pwd
        echo "📄 Using sample JUnit XML file for demonstration"
        echo "📁 Examples directory:"
        ls -la examples/ || echo "❌ Examples directory not found!"
        echo "📄 JUnit sample content:"
        cat examples/junit-sample.xml || echo "❌ JUnit sample file not found!"
        echo "🎯 Using report path: examples/junit-sample.xml"
    
    - name: 🎨 Publish JUnit Test Metrics (HTML Dashboard)
      uses: ./
      if: always()
      with:
        report_paths: 'examples/junit-sample.xml'
        test_framework: 'junit'
        html_output: true
        detailed_summary: true
        fail_on_failure: false
        require_tests: false    # Don't require tests for demo
        cache_key_prefix: 'junit-html'
        artifact_suffix: 'junit-html'
