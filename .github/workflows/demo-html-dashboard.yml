name: 🎨 Dashboard Demo (HTML vs Markdown)

on:
  workflow_dispatch:
    inputs:
      framework:
        description: 'Test Framework to Demo'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - jest
        - playwright
        - junit
      show_comparison:
        description: 'Show side-by-side HTML vs Markdown comparison'
        required: true
        default: true
        type: boolean

jobs:
  demo-jest-comparison:
    runs-on: ubuntu-latest
    if: github.event.inputs.framework == 'all' || github.event.inputs.framework == 'jest'
    strategy:
      matrix:
        include:
          - name: "🎨 Jest HTML Dashboard"
            test_framework: 'jest'
            report_paths: 'test-output/jest-results.json'
            html_output: true
            setup_cmd: 'cd test-output && npm install && npm test'
            suffix: 'jest-html'
          - name: "📝 Jest Markdown Report"
            test_framework: 'jest'
            report_paths: 'test-output/jest-results.json'
            html_output: false
            setup_cmd: 'cd test-output && npm install && npm test'
            condition: ${{ github.event.inputs.show_comparison == 'true' }}
            suffix: 'jest-markdown'
          - name: "🎨 JUnit HTML Dashboard"
            test_framework: 'junit'
            report_paths: 'examples/junit-sample.xml'
            html_output: true
            setup_cmd: 'echo "Using sample JUnit XML for demonstration"'
            suffix: 'junit-html'
          - name: "📝 JUnit Markdown Report"
            test_framework: 'junit'
            report_paths: 'examples/junit-sample.xml'
            html_output: false
            setup_cmd: 'echo "Using sample JUnit XML for demonstration"'
            condition: ${{ github.event.inputs.show_comparison == 'true' }}
            suffix: 'junit-markdown'
    
    name: ${{ matrix.name }}
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 🔧 Setup test environment
      run: ${{ matrix.setup_cmd }}
      if: matrix.condition != 'false'

    - name: ${{ matrix.html_output && '🎨' || '📝' }} Generate Test Metrics (${{ matrix.test_framework }})
      uses: ./
      if: always() && matrix.condition != 'false'
      with:
        report_paths: ${{ matrix.report_paths }}
        test_framework: ${{ matrix.test_framework }}
        html_output: ${{ matrix.html_output }}
        detailed_summary: true
        fail_on_failure: false
        retention_days: 7
        cache_key_prefix: 'demo-${{ matrix.suffix }}'
        artifact_suffix: '${{ matrix.suffix }}'
        
  demo-playwright-comparison:
    runs-on: ubuntu-latest
    if: github.event.inputs.framework == 'all' || github.event.inputs.framework == 'playwright'
    strategy:
      matrix:
        include:
          - name: "🎨 Playwright HTML Dashboard"
            html_output: true
            suffix: 'playwright-html'
          - name: "📝 Playwright Markdown Report"
            html_output: false
            condition: ${{ github.event.inputs.show_comparison == 'true' }}
            suffix: 'playwright-markdown'
    
    name: ${{ matrix.name }}
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: 🧪 Run Playwright Tests
      run: npx playwright test --reporter=json
      if: always()
      env:
        PLAYWRIGHT_JSON_OUTPUT_NAME: playwright-results.json

    - name: ${{ matrix.html_output && '🎨' || '📝' }} Generate Playwright Metrics
      uses: ./
      if: always() && matrix.condition != 'false'
      with:
        report_paths: 'playwright-results.json'
        test_framework: 'playwright'
        html_output: ${{ matrix.html_output }}
        detailed_summary: true
        fail_on_failure: false
        retention_days: 7
        cache_key_prefix: 'demo-${{ matrix.suffix }}'
        artifact_suffix: '${{ matrix.suffix }}'
        
  demo-summary:
    runs-on: ubuntu-latest
    needs: [demo-jest-comparison, demo-playwright-comparison]
    if: always()
    name: 📊 Demo Summary
    
    steps:
    - name: 📊 Display Demo Results
      run: |
        echo "🎉 Dashboard Comparison Demo Completed!"
        echo ""
        echo "✅ What was demonstrated:"
        echo "  🎨 HTML Dashboard - Beautiful, interactive, responsive"
        echo "  📝 Markdown Report - Same structure, GitHub-friendly"
        echo ""
        echo "🔄 Both formats now show IDENTICAL information:"
        echo "  • Same test execution details table"
        echo "  • Same metrics with Current/Previous/Trend columns"
        echo "  • Same performance insights and slowest tests"
        echo "  • Same trend indicators and badges"
        echo ""
        echo "🎯 Choose your preferred format:"
        echo "  • html_output: true  → Beautiful HTML dashboard"
        echo "  • html_output: false → Structured markdown report"
        echo ""
        echo "📖 Complete guide: HTML_OUTPUT_GUIDE.md"
