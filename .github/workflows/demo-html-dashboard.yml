name: 🎨 HTML Dashboard Demo

on:
  workflow_dispatch:
    inputs:
      framework:
        description: 'Test Framework'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - jest
        - playwright
        - junit
      show_comparison:
        description: 'Show Markdown vs HTML comparison'
        required: true
        default: true
        type: boolean

jobs:
  demo-html-dashboard:
    runs-on: ubuntu-latest
    if: github.event.inputs.framework == 'all' || github.event.inputs.framework == 'jest' || github.event.inputs.framework == 'junit'
    strategy:
      matrix:
        include:
          - name: "🎨 Jest HTML Dashboard"
            test_framework: 'jest'
            report_paths: 'test-output/jest-results.json'
            html_output: true
            setup_cmd: 'cd test-output && npm install && npm test'
          - name: "📝 Jest Markdown (comparison)"
            test_framework: 'jest'
            report_paths: 'test-output/jest-results.json'
            html_output: false
            setup_cmd: 'cd test-output && npm install && npm test'
            condition: ${{ github.event.inputs.show_comparison == 'true' }}
          - name: "🎨 JUnit HTML Dashboard"
            test_framework: 'junit'
            report_paths: 'examples/junit-sample.xml'
            html_output: true
            setup_cmd: 'echo "Using sample JUnit file"'
    
    name: ${{ matrix.name }}
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 🔧 Setup test environment
      run: ${{ matrix.setup_cmd }}
      if: matrix.condition != 'false'

    - name: ${{ matrix.html_output && '🎨' || '📝' }} Generate Test Metrics (${{ matrix.test_framework }})
      uses: ./
      if: always() && matrix.condition != 'false'
      with:
        report_paths: ${{ matrix.report_paths }}
        test_framework: ${{ matrix.test_framework }}
        html_output: ${{ matrix.html_output }}
        detailed_summary: true
        fail_on_failure: false
        retention_days: 7
        cache_key_prefix: 'demo-${{ matrix.test_framework }}-${{ matrix.html_output }}'
        
  demo-playwright:
    runs-on: ubuntu-latest
    if: github.event.inputs.framework == 'all' || github.event.inputs.framework == 'playwright'
    strategy:
      matrix:
        include:
          - name: "🎨 Playwright HTML Dashboard"
            html_output: true
          - name: "📝 Playwright Markdown (comparison)"
            html_output: false
            condition: ${{ github.event.inputs.show_comparison == 'true' }}
    
    name: ${{ matrix.name }}
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: 🧪 Run Playwright Tests
      run: npx playwright test --reporter=json
      if: always()
      env:
        PLAYWRIGHT_JSON_OUTPUT_NAME: playwright-results.json

    - name: ${{ matrix.html_output && '🎨' || '📝' }} Generate Playwright Metrics
      uses: ./
      if: always() && matrix.condition != 'false'
      with:
        report_paths: 'playwright-results.json'
        test_framework: 'playwright'
        html_output: ${{ matrix.html_output }}
        detailed_summary: true
        fail_on_failure: false
        retention_days: 7
        cache_key_prefix: 'demo-playwright-${{ matrix.html_output }}'
        
  demo-summary:
    runs-on: ubuntu-latest
    needs: [demo-html-dashboard, demo-playwright]
    if: always()
    name: 📊 Demo Summary
    
    steps:
    - name: 📊 Display Demo Results
      run: |
        echo "🎉 HTML Dashboard Demo Completed!"
        echo ""
        echo "✅ The following demos were run:"
        echo "  🎨 HTML Dashboard outputs"
        echo "  📝 Markdown outputs (for comparison)"
        echo ""
        echo "🔍 Check the Job Summary for each job to see:"
        echo "  • Beautiful HTML dashboard with Tailwind CSS"
        echo "  • Interactive elements and color coding"
        echo "  • Responsive design for mobile/desktop"
        echo "  • Trend analysis and performance insights"
        echo ""
        echo "📖 For more info, see: HTML_OUTPUT_GUIDE.md"
